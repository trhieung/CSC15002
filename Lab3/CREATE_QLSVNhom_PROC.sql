/*-------------------------------------------------------------
	MASV - HOVATEN:
		20120083-NGUYỄN TRỌNG HIẾU

	LAB: 03
	NGAY: 04/04/2023

	PREREQUISITES: RUN AFTER FILE BEFORE DOING WITH THIS FILES
	1. CREATE_QLSVNhom_DB_AND_TABLE.sql
-------------------------------------------------------------*/

USE QLSVNhom
GO

---- i.
CREATE PROCEDURE SP_INS_PUBLIC_NHANVIEN (
	@MANV NVARCHAR(20),
	@HOTEN NVARCHAR(100),
	@EMAIL VARCHAR(20),
	@LUONGCB NUMERIC(10,0),
	@TENDN NVARCHAR(100),
	@MK NVARCHAR(100)
) 
AS
BEGIN
	DECLARE @HASHED_MK VARBINARY(160)
	DECLARE @ENCRYPTED_LUONG VARBINARY(MAX)

	SET @HASHED_MK= HASHBYTES('SHA1', @MK)

	DECLARE @SQL NVARCHAR(MAX);

    IF ASYMKEY_ID(@MANV) IS NULL
	BEGIN
        SET @SQL = 'CREATE ASYMMETRIC KEY '  + QUOTENAME(@MANV) + ' ' +
                 'WITH ALGORITHM = RSA_2048 ' + 
                 'ENCRYPTION BY PASSWORD = ' + QUOTENAME(@MK , NCHAR(39)) -- NCHAR(39) represents the single quote character (') in Unicode
        EXEC (@SQL)
    END

	SET @ENCRYPTED_LUONG = CONVERT(VARBINARY(MAX), ENCRYPTBYASYMKEY(Asymkey_ID(@MANV), CONVERT(VARBINARY(MAX), @LUONGCB)))

	INSERT INTO dbo.NHANVIEN (MANV, HOTEN, EMAIL, LUONG, TENDN, MATKHAU, PUBKEY)
	VALUES (@MANV, @HOTEN, @EMAIL, @ENCRYPTED_LUONG, @TENDN, @HASHED_MK, @MANV)
END
GO

---- ii.
CREATE PROCEDURE dbo.SP_SEL_PUBLIC_NHANVIEN
	@TENDN NVARCHAR(100),
	@MATKHAU NVARCHAR(100)
AS
BEGIN
	SELECT MANV, HOTEN, EMAIL, (CONVERT(NUMERIC(10,0), DECRYPTBYASYMKEY(Asymkey_ID(MANV), LUONG, @MATKHAU))) AS LUONGCB
	FROM NHANVIEN
	WHERE TENDN = @TENDN AND MATKHAU = HASHBYTES('SHA1', @MATKHAU)
END
GO

/*
DROP PROCEDURE dbo.SP_INS_PUBLIC_NHANVIEN
DROP PROCEDURE dbo.SP_SEL_PUBLIC_NHANVIEN
GO
*/

-- d. 
EXEC dbo.SP_INS_PUBLIC_NHANVIEN 'NV01', 'NGUYEN VAN A', 'nva@yahoo.com', 3000000, 'NVA', '123456'
EXEC dbo.SP_INS_PUBLIC_NHANVIEN 'NV02', 'NGUYEN VAN B', 'nvb@yahoo.com', 2000000, 'NVB', '1234567'

EXEC dbo.SP_SEL_PUBLIC_NHANVIEN 'NVA', '123456'
EXEC dbo.SP_SEL_PUBLIC_NHANVIEN 'NVB', '1234567'

/*
SELECT * FROM sys.asymmetric_keys

DROP ASYMMETRIC KEY MyAsymmetricKey
SELECT * FROM sys.asymmetric_keys
*/

-- utility procedures

------------------- procedure insert
CREATE PROCEDURE SP_INS_PUBLIC_SINHVIEN (
	@MASV NVARCHAR(20),
	@HOTEN NVARCHAR(100),
	@NGAYSINH DATETIME,
	@DIACHI NVARCHAR(200),
	@MALOP VARCHAR(20),
	@TENDN NVARCHAR(100),
	@MK NVARCHAR(100)
) 
AS
BEGIN
	DECLARE @HASHED_MK VARBINARY(160)
	SET @HASHED_MK= HASHBYTES('SHA1', @MK)

	INSERT INTO dbo.SINHVIEN (MASV, HOTEN, NGAYSINH, DIACHI, MALOP, TENDN, MATKHAU)
	VALUES (@MASV, @HOTEN, @NGAYSINH, @DIACHI, @MALOP, @TENDN, @HASHED_MK)
END
GO

CREATE PROCEDURE SP_INS_PUBLIC_HOCPHAN (
	@MAHP varchar(20),
	@TENHP nvarchar(100),
	@SOTC int
)
AS
BEGIN 
	INSERT INTO dbo.HOCPHAN (MAHP, TENHP, SOTC)
	VALUES (@MAHP, @TENHP, @SOTC)
END
GO

CREATE PROCEDURE SP_INS_PUBLIC_BANGDIEM ( 
	@MASV VARCHAR(20), 
	@TDN VARCHAR(20), 
	@MAHP vARCHAR(20), 
	@DIEM NUMERIC(4,2)
)
AS
BEGIN
	IF @DIEM < 0 OR @DIEM > 10
		SELECT 'Fail' AS Result
	ELSE
		DECLARE @PUBK VARCHAR(20)
		SET @PUBK = (SELECT PUBKEY FROM NHANVIEN WHERE TENDN = @TDN)
		IF EXISTS(SELECT *
			FROM BANGDIEM AS BD
			WHERE @MASV = BD.MASV AND @MAHP = BD.MAHP)
			BEGIN
				UPDATE BANGDIEM
				SET DIEMTHI = CONVERT(VARBINARY(MAX), ENCRYPTBYASYMKEY(ASYMKEY_ID(@PUBK), CONVERT(VARBINARY(MAX), @DIEM)))
				WHERE MASV = @MASV AND MAHP = @MAHP
				SELECT 'Success' AS Result
			END
		ELSE
			INSERT INTO BANGDIEM VALUES (@MASV, @MAHP, CONVERT(VARBINARY(MAX), ENCRYPTBYASYMKEY(ASYMKEY_ID(@PUBK), CONVERT(VARBINARY(MAX), @DIEM))))
			SELECT 'Success' AS Result
END

CREATE PROCEDURE SP_SEL_PUBLIC_LOP
AS
BEGIN
	SELECT DISTINCT MALOP
	FROM LOP
END
GO
---------------------- procedure select
CREATE PROCEDURE SP_SEL_PUBLIC_SV
	@TDN VARCHAR(20)
AS
BEGIN
	SELECT sv.MASV, sv.HOTEN, sv.NGAYSINH, sv.DIACHI, sv.MALOP, LOP.TENLOP
	FROM SINHVIEN sv 
	LEFT JOIN LOP ON sv.MALOP = LOP.MALOP
	LEFT JOIN NHANVIEN AS nv ON nv.MANV = lop.MANV
	WHERE nv.TENDN = @TDN
END
GO

CREATE PROCEDURE SP_SEL_PUBLIC_SV_IN_LOP 
	@TDN VARCHAR(20),
	@MALOP VARCHAR(20)
AS
BEGIN
	SELECT sv.MASV, sv.HOTEN, sv.NGAYSINH, sv.DIACHI, sv.MALOP, LOP.TENLOP
	FROM SINHVIEN sv 
	LEFT JOIN LOP ON sv.MALOP = LOP.MALOP
	LEFT JOIN NHANVIEN AS nv ON nv.MANV = lop.MANV
	WHERE @MALOP = LOP.MALOP AND nv.TENDN = @TDN
END
GO

CREATE PROCEDURE SP_SEL_PUBLIC_BANDDIEM (
	@TDN VARCHAR(20),
	@MK NVARCHAR(20)
)
AS
BEGIN 
	select bd.masv, bd.MAHP, (CONVERT(numeric(4, 2), DECRYPTBYASYMKEY(Asymkey_ID(nv.PUBKEY), bd.DIEMTHI, @MK))) AS DIEM
	from BANGDIEM as bd
	left join SINHVIEN as sv on bd.MASV = sv.MASV
	left join LOP as l on sv.MALOP = l.MALOP
	left join NHANVIEN as nv on nv.MANV = l.MANV
	WHERE nv.TENDN = @TDN
END
select bd.masv, bd.MAHP, nv.manv, (CONVERT(numeric(4, 2), DECRYPTBYASYMKEY(Asymkey_ID(nv.PUBKEY), bd.DIEMTHI, N'123456'))) AS DIEM
from BANGDIEM as bd
left join SINHVIEN as sv on bd.MASV = sv.MASV
left join LOP as l on sv.MALOP = l.MALOP
left join NHANVIEN as nv on nv.MANV = l.MANV

--CREATE PROCEDURE SP_SEL_PUBLIC_BANGDIEM ()
---------------------- procedure update
CREATE PROCEDURE SP_UPD_PUBLIC_SINHVIEN (
	@MASV NVARCHAR(20),
	@HOTEN NVARCHAR(100),
	@NGAYSINH DATETIME,
	@DIACHI NVARCHAR(200),
	@MALOP VARCHAR(20)
)
AS
BEGIN
	UPDATE SINHVIEN
	SET HOTEN = @HOTEN, NGAYSINH = @NGAYSINH, DIACHI = @DIACHI, MALOP = @MALOP
	WHERE MASV = @MASV
END
GO

------------------------
CREATE PROCEDURE dbo.SP_CheckLogin_NHANVIEN
    @username NVARCHAR(100),
    @password NVARCHAR(100)
AS
BEGIN
    IF EXISTS(SELECT * FROM dbo.NHANVIEN WHERE TENDN = @username AND MATKHAU = HASHBYTES('SHA1', @password))
        SELECT 'Success' AS Result
    ELSE
        SELECT 'Fail' AS Result
END

-----------

EXEC SP_INS_PUBLIC_SINHVIEN 'SV0', 'SV0', NULL, NULL, 'L1', N'SV0', 'SV0'
EXEC SP_INS_PUBLIC_SINHVIEN 'SV1', 'SV1', NULL, NULL, 'L3', N'SV1', 'SV1'
EXEC SP_INS_PUBLIC_SINHVIEN 'SV2', 'SV2', NULL, NULL, 'L1', N'SV2', 'SV2'
EXEC SP_INS_PUBLIC_SINHVIEN 'SV3', 'SV3', NULL, NULL, 'L3', N'SV3', 'SV3'
EXEC SP_INS_PUBLIC_SINHVIEN 'SV4', 'SV4', NULL, NULL, 'L4', N'SV4', 'SV4'

EXEC SP_INS_PUBLIC_HOCPHAN 'HP0', 'HOC PHAN 0', 1
EXEC SP_INS_PUBLIC_HOCPHAN 'HP1', 'HOC PHAN 1', 1
EXEC SP_INS_PUBLIC_HOCPHAN 'HP2', 'HOC PHAN 2', 1
EXEC SP_INS_PUBLIC_HOCPHAN 'HP3', 'HOC PHAN 3', 1
EXEC SP_INS_PUBLIC_HOCPHAN 'HP4', 'HOC PHAN 4', 1

EXEC SP_CheckLogin_NHANVIEN 'NVA', '123456'

EXEC SP_SEL_PUBLIC_LOP

EXEC SP_SEL_PUBLIC_SV 'NVA'

EXEC SP_SEL_PUBLIC_SV_IN_LOP 'NVA', 'L3'

exec SP_SEL_PUBLIC_BANDDIEM 'NVA', '123456'

EXEC SP_INS_PUBLIC_BANGDIEM 'SV0', 'NVA', 'HP0', 1
EXEC SP_INS_PUBLIC_BANGDIEM 'SV0', 'NVA', 'HP1', 4
EXEC SP_INS_PUBLIC_BANGDIEM 'SV0', 'NVA', 'HP3', 11

EXEC SP_UPD_PUBLIC_SINHVIEN 'SV0', 'SINHVIEN', '3/12/2002', 'BINHDINH', 'L4'
